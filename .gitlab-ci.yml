stages:
  - install
  - build
  - deploy

variables:
  SSH_PRIVATE_KEY: "$SSH_PRIVATE_KEY"
  MASTER_ARTIFACT_PATH: "dist_prod/"
  TEST_ARTIFACT_PATH: "dist_test/"
  NODE_OPTIONS: "--max-old-space-size=4096"

cache:
  paths:
    - node_modules/

install_stage:
  stage: install
  image: node:18
  script:
    - npm ci
  only:
    - master
    - test
  tags:
    - front
  artifacts:
    paths:
      - node_modules/

build_stage:
  stage: build
  image: node:18
  script:
    - if [ "$CI_COMMIT_BRANCH" == "master" ]; then
      npm run build;
      mv dist dist_prod;
      else
      npm run build:stage;
      mv dist dist_test;
      fi
  dependencies:
    - install_stage
  only:
    - master
    - test
  tags:
    - front
  artifacts:
    paths:
      - dist_prod/
      - dist_test/

deploy_stage:
  stage: deploy
  image: node:lts
  before_script:
    - apt-get update -y
    - apt-get install -y openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - touch ~/.ssh/config
    - touch ~/.ssh/known_hosts
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod -R 400 ~/.ssh
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $SMARTENU_IP >> ~/.ssh/known_hosts
  script:
    - if [ "$CI_COMMIT_BRANCH" == "master" ]; then
      ssh $SSH_AUTH_URL "rm -rf /local/prohtml/*";
      scp -r dist_prod/* $SSH_AUTH_URL:/local/prohtml;
      elif [ "$CI_COMMIT_BRANCH" == "test" ]; then
      ssh $SSH_AUTH_URL "rm -rf /local/testhtml/*";
      scp -r dist_test/* $SSH_AUTH_URL:/local/testhtml;
      fi
  dependencies:
    - build_stage
  only:
    - master
    - test
  tags:
    - front
